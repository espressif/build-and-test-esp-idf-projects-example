name: "Build Examples in PR"

on:
  pull_request:
  repository_dispatch:
    types: [build-examples]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-examples:
    runs-on: ubuntu-latest
    container:
      image: espressif/idf:release-v5.4
    strategy:
      matrix:
        include:
          - paths: "examples;examples/test-cmp1"
            modified_files: "components/cmp1/cmp1.c;"
            artifact_name: test1
            expected_results: |
              [ "$(grep -c '^{' app_info_1.txt)" -eq 3 ]
              [ "$(grep 'test-cmp1"' app_info_1.txt | jq -r .build_status)" = "build success" ]
              [ "$(grep 'test-cmp1-cmp2"' app_info_1.txt | jq -r .build_status)" = "build success" ]
              [ "$(grep 'test-cmp2"' app_info_1.txt | jq -r .build_status)" = "skipped" ]
          - paths: "examples;examples/test-cmp2"
            modified_files: "components/cmp2/cmp2.c;"
            artifact_name: test2
            expected_results: |
              [ "$(grep -c '^{' app_info_1.txt)" -eq 3 ]
              [ "$(grep 'test-cmp1"' app_info_1.txt | jq -r .build_status)" = "skipped" ]
              [ "$(grep 'test-cmp1-cmp2"' app_info_1.txt | jq -r .build_status)" = "build success" ]
              [ "$(grep 'test-cmp2"' app_info_1.txt | jq -r .build_status)" = "build success" ]
    name: ${{ matrix.artifact_name }}
    steps:
      - uses: hfudev/build-esp-idf-projects-action@v1
        with:
          paths: ${{ matrix.paths }}
          target: esp32
          modified_files: ${{ matrix.modified_files }}
          artifact_name: ${{ matrix.artifact_name }}
      - uses: actions/download-artifact@v4
        with:
          path: .
      - name: check cmp2 project skipped
        run: |
          apt update && apt install -y jq
          ${{ matrix.expected_results }}
